cmake_minimum_required(VERSION "3.16.1")

#-------------------------------------------------------------------------------
# Normal stuff
#-------------------------------------------------------------------------------

include(FetchContent)

set(MAIN_PROJECT_NAME "cpp-fun")
set(TEST_PROJECT_NAME "cpp-fun-tests")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pg")
set(CMAKE_BUILD_TYPE Debug)

# Gather up all the source files
set(SOURCES
  src/buildNewCollisionState.cpp
  src/handleEvents.cpp
  src/moveShape.cpp
)

#-------------------------------------------------------------------------------
# SFML
#-------------------------------------------------------------------------------

FetchContent_Declare(
 SFML
 GIT_REPOSITORY https://github.com/SFML/SFML.git
 GIT_TAG 2.5.1
)

FetchContent_MakeAvailable(SFML)

#-------------------------------------------------------------------------------
# Create the main executable
#-------------------------------------------------------------------------------

project(${MAIN_PROJECT_NAME})

add_executable(${MAIN_PROJECT_NAME}
  src/main.cpp
  ${SOURCES}
)

target_link_libraries(${MAIN_PROJECT_NAME}
  sfml-graphics
  sfml-window
  sfml-system
)

#-------------------------------------------------------------------------------
# Catch 2
#-------------------------------------------------------------------------------

FetchContent_Declare(
  Catch2
  GIT_REPOSITORY https://github.com/catchorg/Catch2.git
  GIT_TAG        v3.0.1 # or a later release
)

FetchContent_MakeAvailable(Catch2)

#-------------------------------------------------------------------------------
# Create the test executable
#-------------------------------------------------------------------------------

project(${TEST_PROJECT_NAME})

add_executable(${TEST_PROJECT_NAME}
  src/test.cpp
  ${SOURCES}
)

# Link our executable to Catch2's main() function
target_link_libraries(${TEST_PROJECT_NAME} PRIVATE 
  Catch2::Catch2WithMain
  sfml-graphics
  sfml-window
  sfml-system
)